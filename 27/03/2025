import javax.swing.*;
import javax.swing.table.*;
import java.awt.*;
import java.awt.event.*;
import java.util.*;

class Movie {
    private String title, genre;
    public Movie(String title, String genre) {
        this.title = title;
        this.genre = genre;
    }
    public String getTitle() { return title; }
    public String getGenre() { return genre; }
}

public class MovieCollectionManager {
    private JFrame frame;
    private JTextField titleField, searchField;
    private JComboBox<String> genreBox;
    private DefaultTableModel tableModel;
    private JTable table;
    private java.util.List<Movie> movies = new ArrayList<>();

    public MovieCollectionManager() {
        frame = new JFrame("Movie Collection Manager");
        frame.setSize(500, 400);
        frame.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
        frame.setLayout(new BorderLayout());
        
        JPanel inputPanel = new JPanel();
        titleField = new JTextField(15);
        genreBox = new JComboBox<>(new String[]{"Action", "Comedy", "Horror", "Drama", "Sci-Fi"});
        JButton addButton = new JButton("Add Movie");
        inputPanel.add(new JLabel("Title:"));
        inputPanel.add(titleField);
        inputPanel.add(new JLabel("Genre:"));
        inputPanel.add(genreBox);
        inputPanel.add(addButton);
        frame.add(inputPanel, BorderLayout.NORTH);
        
        tableModel = new DefaultTableModel(new String[]{"Title", "Genre"}, 0);
        table = new JTable(tableModel);
        frame.add(new JScrollPane(table), BorderLayout.CENTER);
        
        JPanel controlPanel = new JPanel();
        JButton sortTitleButton = new JButton("Sort by Title");
        JButton sortGenreButton = new JButton("Sort by Genre");
        searchField = new JTextField(10);
        JButton searchButton = new JButton("Search");
        JLabel countLabel = new JLabel("Total Movies: 0");
        controlPanel.add(sortTitleButton);
        controlPanel.add(sortGenreButton);
        controlPanel.add(new JLabel("Search:"));
        controlPanel.add(searchField);
        controlPanel.add(searchButton);
        controlPanel.add(countLabel);
        frame.add(controlPanel, BorderLayout.SOUTH);
        
        addButton.addActionListener(e -> {
            String title = titleField.getText().trim();
            String genre = (String) genreBox.getSelectedItem();
            if (!title.isEmpty()) {
                movies.add(new Movie(title, genre));
                tableModel.addRow(new Object[]{title, genre});
                titleField.setText("");
                countLabel.setText("Total Movies: " + movies.size());
            }
        });
        
        sortTitleButton.addActionListener(e -> {
            movies.sort(Comparator.comparing(Movie::getTitle));
            updateTable();
        });
        
        sortGenreButton.addActionListener(e -> {
            movies.sort(Comparator.comparing(Movie::getGenre));
            updateTable();
        });
        
        searchButton.addActionListener(e -> {
            String query = searchField.getText().trim().toLowerCase();
            if (!query.isEmpty()) {
                for (int i = 0; i < movies.size(); i++) {
                    if (movies.get(i).getTitle().toLowerCase().contains(query)) {
                        table.setRowSelectionInterval(i, i);
                        break;
                    }
                }
            }
        });
        
        frame.setVisible(true);
    }
    
    private void updateTable() {
        tableModel.setRowCount(0);
        for (Movie movie : movies) {
            tableModel.addRow(new Object[]{movie.getTitle(), movie.getGenre()});
        }
    }
    
    public static void main(String[] args) {
        SwingUtilities.invokeLater(MovieCollectionManager::new);
    }
}

